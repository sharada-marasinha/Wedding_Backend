spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: wedding-app
            scope: openid, profile, email
      provider:
        keycloak:
          issuer-uri: http://localhost:8080/realms/wedding-app
    resource-server:
      jwt:
        issuer-uri: http://localhost:8080/realms/wedding-app

  mail:
    host: smtp.gmail.com
    port: 587
    username: sharadamarasinha@gmail.com
    # Your 16-digit App Password from Google
    password: xsqx jkrf heue bwnx  # ⚠️ Consider using an environment variable or vault
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          # Optional timeouts (in milliseconds)
          # connectiontimeout: 5000
          # timeout: 5000
          # writetimeout: 5000

  datasource:
    url: jdbc:mysql://localhost:3306/wedding_db?createDatabaseIfNotExist=true
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      max-lifetime: 600000
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          lob:
            non_contextual_creation: true

  sql:
    init:
      mode: always

logging:
  level:
    org:
      springframework:
        security: trace

server:
  port: 8081
  error:
    include-message: always

# Uncomment to use specific profile
# spring:
#   profiles:
#     active: dev

# Uncomment and set JWT values securely
# app:
#   jwt-secret: 'your-512-bit-secret-key-which-should-be-very-long'
#   jwt-expiration-milliseconds: 86400000 # 24 hours
